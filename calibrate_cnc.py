# calibrate_cnc.py
import numpy as np
import cv2
import serial
import time


CALIB_POINTS = [
    (0, 0),  
    (0, 50),   
    (0, 100),
    (0, 150),
    (0, 200),
    (0, 250),
    (0, 300),
    (0, 350),
    (0, 400),
    (0, 450),
    (0, 500),
    (0, 550),
    (0, 600),
    (0, 650),
    (0, 700),
    (0, 750),
    (0, 800),
    (0, 850),
    (0, 900),
    (0, 950),
    (0, 1000),
    (50, 1000),
    (50, 950),
    (50, 900),
    (50, 850),
    (50, 800),
    (50, 750),
    (50, 700),
    (50, 650),
    (50, 600),
    (50, 550),
    (50, 500),
    (50, 450),
    (50, 400),
    (50, 350),
    (50, 300),
    (50, 250),
    (50, 200),
    (50, 150),
    (50, 100),
    (50, 50),
    (50, 0),
    (100, 0),
    (100, 50),
    (100, 100),
    (100, 150),
    (100, 200),
    (100, 250),
    (100, 300),
    (100, 350),
    (100, 400),
    (100, 450),
    (100, 500),
    (100, 550),
    (100, 600),
    (100, 650),
    (100, 700),
    (100, 750),
    (100, 800),
    (100, 850),
    (100, 900),
    (100, 950),
    (100, 1000),
    (150, 1000),
    (150, 950),
    (150, 900),
    (150, 850),
    (150, 800),
    (150, 750),
    (150, 700),
    (150, 650),
    (150, 600),
    (150, 550),
    (150, 500),
    (150, 450),
    (150, 400),
    (150, 350),
    (150, 300),
    (150, 250),
    (150, 200),
    (150, 150),
    (150, 100),
    (150, 50),
    (150, 0),
    (200, 0),
    (200, 50),
    (200, 100),
    (200, 150),
    (200, 200),
    (200, 250),
    (200, 300),
    (200, 350),
    (200, 400),
    (200, 450),
    (200, 500),
    (200, 550),
    (200, 600),
    (200, 650),
    (200, 700),
    (200, 750),
    (200, 800),
    (200, 850),
    (200, 900),
    (200, 950),
    (200, 1000),
    (250, 1000),
    (250, 950),
    (250, 900),
    (250, 850),
    (250, 800),
    (250, 750),
    (250, 700),
    (250, 650),
    (250, 600),
    (250, 550),
    (250, 500),
    (250, 450),
    (250, 400),
    (250, 350),
    (250, 300),
    (250, 250),
    (250, 200),
    (250, 150),
    (250, 100),
    (250, 50),
    (250, 0),
    (300, 0),
    (300, 50),
    (300, 100),
    (300, 150),
    (300, 200),
    (300, 250),
    (300, 300),
    (300, 350),
    (300, 400),
    (300, 450),
    (300, 500),
    (300, 550),
    (300, 600),
    (300, 650),
    (300, 700),
    (300, 750),
    (300, 800),
    (300, 850),
    (300, 900),
    (300, 950),
    (300, 1000),
    (350, 1000),
    (350, 950),
    (350, 900),
    (350, 850),
    (350, 800),
    (350, 750),
    (350, 700),
    (350, 650),
    (350, 600),
    (350, 550),
    (350, 500),
    (350, 450),
    (350, 400),
    (350, 350),
    (350, 300),
    (350, 250),
    (350, 200),
    (350, 150),
    (350, 100),
    (350, 50),
    (350, 0),
    (400, 0),
    (400, 50),
    (400, 100),
    (400, 150),
    (400, 200),
    (400, 250),
    (400, 300),
    (400, 350),
    (400, 400),
    (400, 450),
    (400, 500),
    (400, 550),
    (400, 600),
    (400, 650),
    (400, 700),
    (400, 750),
    (400, 800),
    (400, 850),
    (400, 900),
    (400, 950),
    (400, 1000),
    (450, 1000),
    (450, 950),
    (450, 900),
    (450, 850),
    (450, 800),
    (450, 750),
    (450, 700),
    (450, 650),
    (450, 600),
    (450, 550),
    (450, 500),
    (450, 450),
    (450, 400),
    (450, 350),
    (450, 300),
    (450, 250),
    (450, 200),
    (450, 150),
    (450, 100),
    (450, 50),
    (450, 0),
    (500, 0),
    (500, 50),
    (500, 100),
    (500, 150),
    (500, 200),
    (500, 250),
    (500, 300),
    (500, 350),
    (500, 400),
    (500, 450),
    (500, 500),
    (500, 550),
    (500, 600),
    (500, 650),
    (500, 700),
    (500, 750),
    (500, 800),
    (500, 850),
    (500, 900),
    (500, 950),
    (500, 1000),
    (550, 1000),
    (550, 950),
    (550, 900),
    (550, 850),
    (550, 800),
    (550, 750),
    (550, 700),
    (550, 650),
    (550, 600),
    (550, 550),
    (550, 500),
    (550, 450),
    (550, 400),
    (550, 350),
    (550, 300),
    (550, 250),
    (550, 200),
    (550, 150),
    (550, 100),
    (550, 50),
    (550, 0),
    (600, 0),
    (600, 50),
    (600, 100),
    (600, 150),
    (600, 200),
    (600, 250),
    (600, 300),
    (600, 350),
    (600, 400),
    (600, 450),
    (600, 500),
    (600, 550),
    (600, 600),
    (600, 650),
    (600, 700),
    (600, 750),
    (600, 800),
    (600, 850),
    (600, 900),
    (600, 950),
    (600, 1000),
    (650, 1000),
    (650, 950),
    (650, 900),
    (650, 850),
    (650, 800),
    (650, 750),
    (650, 700),
    (650, 650),
    (650, 600),
    (650, 550),
    (650, 500),
    (650, 450),
    (650, 400),
    (650, 350),
    (650, 300),
    (650, 250),
    (650, 200),
    (650, 150),
    (650, 100),
    (650, 50),
    (650, 0),
    (700, 0),
    (700, 50),
    (700, 100),
    (700, 150),
    (700, 200),
    (700, 250),
    (700, 300),
    (700, 350),
    (700, 400),
    (700, 450),
    (700, 500),
    (700, 550),
    (700, 600),
    (700, 650),
    (700, 700),
    (700, 750),
    (700, 800),
    (700, 850),
    (700, 900),
    (700, 950),
    (700, 1000),
    (750, 1000),
    (750, 950),
    (750, 900),
    (750, 850),
    (750, 800),
    (750, 750),
    (750, 700),
    (750, 650),
    (750, 600),
    (750, 550),
    (750, 500),
    (750, 450),
    (750, 400),
    (750, 350),
    (750, 300),
    (750, 250),
    (750, 200),
    (750, 150),
    (750, 100),
    (750, 50),
    (750, 0),
    (800, 0),
    (800, 50),
    (800, 100),
    (800, 150),
    (800, 200),
    (800, 250),
    (800, 300),
    (800, 350),
    (800, 400),
    (800, 450),
    (800, 500),
    (800, 550),
    (800, 600),
    (800, 650),
    (800, 700),
    (800, 750),
    (800, 800),
    (800, 850),
    (800, 900),
    (800, 950),
    (800, 1000),
    (850, 1000),
    (850, 950),
    (850, 900),
    (850, 850),
    (850, 800),
    (850, 750),
    (850, 700),
    (850, 650),
    (850, 600),
    (850, 550),
    (850, 500),
    (850, 450),
    (850, 400),
    (850, 350),
    (850, 300),
    (850, 250),
    (850, 200),
    (850, 150),
    (850, 100),
    (850, 50),
    (850, 0),
    (900, 0),
    (900, 50),
    (900, 100),
    (900, 150),
    (900, 200),
    (900, 250),
    (900, 300),
    (900, 350),
    (900, 400),
    (900, 450),
    (900, 500),
    (900, 550),
    (900, 600),
    (900, 650),
    (900, 700),
    (900, 750),
    (900, 800),
    (900, 850),
    (900, 900),
    (900, 950),
    (900, 1000),
    (950, 1000),
    (950, 950),
    (950, 900),
    (950, 850),
    (950, 800),
    (950, 750),
    (950, 700),
    (950, 650),
    (950, 600),
    (950, 550),
    (950, 500),
    (950, 450),
    (950, 400),
    (950, 350),
    (950, 300),
    (950, 250),
    (950, 200),
    (950, 150),
    (950, 100),
    (950, 50),
    (950, 0),
    (1000, 0),
    (1000, 50),
    (1000, 100),
    (1000, 150),
    (1000, 200),
    (1000, 250),
    (1000, 300),
    (1000, 350),
    (1000, 400),
    (1000, 450),
    (1000, 500),
    (1000, 550),
    (1000, 600),
    (1000, 650),
    (1000, 700),
    (1000, 750),
    (1000, 800),
    (1000, 850),
    (1000, 900),
    (1000, 950),
    (1000, 1000),
]

ARUCO_ID = 8  # ID do marcador no end effector

def collect_calibration_data():
    calib_data = {"cnc": [], "cam": []}
    cap = cv2.VideoCapture(0)
    cnc = serial.Serial('/dev/grbl', 115200)
    aruco_detector = cv2.aruco.ArucoDetector(cv2.aruco.getPredefinedDictionary(cv2.aruco.DICT_4X4_50))

    for x_cnc, y_cnc in CALIB_POINTS:
        cnc.write(f"G0 X{x_cnc} Y{y_cnc}\n".encode())
        print(f"Posicionando em ({x_cnc}, {y_cnc}). Pressione 'c' para capturar ou 'q' para sair.")
        
        while True:
            ret, frame = cap.read()
            if not ret:
                print("Erro na captura do frame")
                continue
                
            # Detectar ArUco e mostrar na tela
            corners, ids, _ = aruco_detector.detectMarkers(frame)
            frame_display = cv2.aruco.drawDetectedMarkers(frame.copy(), corners, ids)
            
            # Adicionar informações na imagem
            cv2.putText(frame_display, f"Ponto: ({x_cnc}, {y_cnc})", (10, 30), 
                        cv2.FONT_HERSHEY_SIMPLEX, 0.7, (0, 255, 0), 2)
            
            if ids is not None and ARUCO_ID in ids:
                idx = np.where(ids == ARUCO_ID)[0][0]
                x_cam = corners[idx][0][0][0]
                y_cam = corners[idx][0][0][1]
                cv2.putText(frame_display, f"Marker: ({int(x_cam)}, {int(y_cam)})", 
                            (10, 60), cv2.FONT_HERSHEY_SIMPLEX, 0.7, (0, 255, 0), 2)
            
            cv2.imshow("Calibration", frame_display)
            key = cv2.waitKey(1) & 0xFF
            
            if key == ord('q'):
                cap.release()
                cv2.destroyAllWindows()
                return
            elif key == ord('c'):
                # Capturar posição
                if ids is not None and ARUCO_ID in ids:
                    idx = np.where(ids == ARUCO_ID)[0][0]
                    x_cam = corners[idx][0][0][0]
                    y_cam = corners[idx][0][0][1]
                    calib_data["cnc"].append([x_cnc, y_cnc])
                    calib_data["cam"].append([x_cam, y_cam])
                    print(f"Capturado: CNC ({x_cnc}, {y_cnc}) -> Cam ({int(x_cam)}, {int(y_cam)})")
                    break
                else:
                    print("Marcador ArUco não detectado. Tente novamente.")
    
    cap.release()
    cv2.destroyAllWindows()
    np.save("calib_data.npy", calib_data)
    print("Dados salvos em calib_data.npy")

if __name__ == "__main__":
    collect_calibration_data()
